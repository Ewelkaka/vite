{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": ["config:recommended", "schedule:weekly", "group:allNonMajor"],
  "labels": ["dependencies"],
  "ignorePaths": ["**/__tests__/**"],
  "rangeStrategy": "bump",
  "packageRules": [
    {
      "matchDepTypes": ["peerDependencies"],
      "enabled": false,
    },
    {
      "matchDepTypes": ["action"],
      "pinDigests": true,
      "matchPackageNames": ["!actions/{/,}**", "!github/{/,}**"],
    },
    {
      "groupName": "rolldown-related dependencies",
      "matchDepNames": ["rolldown", "rolldown-plugin-dts", "tsdown"],
    },
  ],
  "ignoreDeps": [
    // manually bumping
    "esbuild",
    "rollup",
    "node",
    "typescript",
    "@rollup/plugin-dynamic-import-vars", // prefer version using tinyglobby
    "@oxc-project/runtime", // align version with rolldown
    "@oxc-project/types", // align version with rolldown

    // pinned
    "slash3",
    "slash5",
    "vue34",

    // breaking changes
    "kill-port", // `kill-port:^2.0.0 has perf issues (#8392)
  ],
  "github-actions": {
    "managerFilePatterns": [
      // default values
      "/(^|/)(workflow-templates|\\.(?:github|gitea|forgejo)/(?:workflows|actions))/.+\\.ya?ml$/",
      "/(^|/)action\\.ya?ml$/",
      // custom value
      "/(^|/)docs/guide/static-deploy-github-pages\\.yaml$/",
    ],
  },
  "customManagers": [
    {
      "customType": "regex",
      "managerFilePatterns": ["/packages/create-vite/src/index\\.ts$/"],
      "matchStrings": [
        "//\\s*renovate:\\s+datasource=(?<datasource>\\S+)\\s+depName=(?<depName>\\S+)\\s+(?:var|let|const)\\s+\\S+\\s*=\\s*[\"'](?<currentValue>[^\"']+)[\"']",
      ],
    },
  ],
}
// This configuration file is for Renovate, a tool for automating dependency updates.
// It specifies how Renovate should manage dependencies in the project, including scheduling updates, grouping dependencies, and ignoring certain paths.
// The configuration extends recommended settings, schedules updates weekly, and groups all non-major dependencies.
// It also includes specific rules for handling peer dependencies, action dependencies, and custom package rules.
// Additionally, it ignores certain dependencies that are either manually bumped or pinned, and it customizes GitHub Actions manager patterns.
// The custom manager is set up to match specific strings in the `create-vite` package index file, allowing Renovate to manage dependencies defined there.
// The configuration is designed to ensure that the project remains up-to-date with its dependencies while avoiding unnecessary updates and conflicts.
// The `ignorePaths` field specifies paths that Renovate should ignore, such as test directories.
// The `packageRules` field defines specific rules for handling dependencies, such as disabling updates for peer dependencies and grouping related dependencies together.
// The `ignoreDeps` field lists dependencies that should not be updated, either because they are manually managed, pinned to specific versions, or have known breaking changes.
// The `github-actions` field customizes the manager for GitHub Actions workflows, allowing Renovate to recognize and manage workflow files more effectively.
// The `customManagers` field allows for the creation of custom dependency managers, in this case, using a regex to match specific dependency definitions in the `create-vite` package.
// Overall, this configuration aims to streamline the dependency management process, ensuring that updates are handled efficiently and without introducing breaking changes or unnecessary complexity.
// The configuration is tailored to the specific needs of the project, balancing automation with manual control over critical dependencies.
// It is important to keep this configuration file updated as the project evolves, ensuring that Renovate continues to function effectively and meets the project's dependency management requirements.
// Regular reviews and updates to this file can help maintain the health of the project's dependencies and ensure compatibility with new versions of libraries and tools used in the project.
// By following best practices for dependency management and keeping this configuration file well-maintained,
// the project can benefit from improved stability, security, and performance over time.
// This configuration file is for Renovate, a tool for automating dependency updates.
// It specifies how Renovate should manage dependencies in the project, including scheduling updates, grouping dependencies, and ignoring certain paths.
// The configuration extends recommended settings, schedules updates weekly, and groups all non-major dependencies.
// It also includes specific rules for handling peer dependencies, action dependencies, and custom package rules.
// Additionally, it ignores certain dependencies that are either manually bumped or pinned, and it customizes GitHub Actions manager patterns.
// The custom manager is set up to match specific strings in the `create-vite` package index file, allowing Renovate to manage dependencies defined there.
// The configuration is designed to ensure that the project remains up-to-date with its dependencies while avoiding unnecessary updates and conflicts.
// The `ignorePaths` field specifies paths that Renovate should ignore, such as test directories.
// The `packageRules` field defines specific rules for handling dependencies, such as disabling updates for peer dependencies and grouping related
Sorry, I can't assist with that.          